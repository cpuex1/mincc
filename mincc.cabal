cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           mincc
version:        0.1.0.0
description:    A compiler that transforms MinCaml sources into RINANA, an original assembly language inspired by RISC-V.
homepage:       https://github.com/cpuex1/mincc#readme
bug-reports:    https://github.com/cpuex1/mincc/issues
author:         Akihisa Yagi
maintainer:     caphosra@gmail.com
copyright:      2024 Akihisa Yagi
license:        BSD-3-Clause
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/cpuex1/mincc

library
  exposed-modules:
      BackEnd.Algorithm.Graph
      BackEnd.Algorithm.Shuffle
      BackEnd.Analysis.CodeBlock
      BackEnd.Analysis.IR
      BackEnd.Analysis.Liveness
      BackEnd.Analysis.Phi
      BackEnd.BackendEnv
      BackEnd.CodeGen.Common
      BackEnd.CodeGen.Optim
      BackEnd.CodeGen.RINANA
      BackEnd.Liveness
      BackEnd.Lowering
      BackEnd.Optim
      BackEnd.Optim.Common
      BackEnd.Optim.EmptyBlockMerging
      BackEnd.Optim.Merging
      BackEnd.Optim.MulElim
      BackEnd.Optim.RegMerging
      BackEnd.Optim.Unreachable
      BackEnd.Optim.UnusedReg
      BackEnd.Optim.UseZeroReg
      BackEnd.Refuge
      BackEnd.RegisterAlloc
      BackEnd.Spill
      Builtin
      CodeBlock
      Display
      Error
      FrontEnd.Flatten
      FrontEnd.KNorm
      FrontEnd.NameRes
      FrontEnd.Parser
      FrontEnd.TypeInferrer
      IR
      MiddleEnd.Analysis.Common
      MiddleEnd.Analysis.Constant
      MiddleEnd.Analysis.Identifier
      MiddleEnd.Closure
      MiddleEnd.Desugar
      MiddleEnd.Globals
      MiddleEnd.Optim
      MiddleEnd.Optim.BoolOperation
      MiddleEnd.Optim.Common
      MiddleEnd.Optim.CompMerging
      MiddleEnd.Optim.ConstFold
      MiddleEnd.Optim.CSE
      MiddleEnd.Optim.IfMerging
      MiddleEnd.Optim.Inlining
      MiddleEnd.Optim.LoopArgsElim
      MiddleEnd.Optim.LoopDetection
      MiddleEnd.Optim.ReadOnly
      MiddleEnd.Optim.StripCondition
      MiddleEnd.Optim.SwapIf
      MiddleEnd.Optim.UnusedElim
      MiddleEnd.Optim.VarMerging
      MiddleEnd.Validator
      Registers
      Syntax
      Typing
  other-modules:
      Paths_mincc
  autogen-modules:
      Paths_mincc
  hs-source-dirs:
      src
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints
  build-depends:
      Cabal
    , base >=4.7 && <5
    , containers
    , hspec
    , megaparsec
    , mtl
    , parser-combinators
    , text
    , transformers
  default-language: Haskell2010

executable mincc
  main-is: Main.hs
  other-modules:
      CommandLine
      Compile
      Log
      Path
      RegisterAlloc
      Paths_mincc
  autogen-modules:
      Paths_mincc
  hs-source-dirs:
      app
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      Cabal
    , ansi-terminal
    , base >=4.7 && <5
    , bytestring
    , containers
    , hspec
    , megaparsec
    , mincc
    , mtl
    , optparse-applicative
    , parser-combinators
    , text
    , transformers
  default-language: Haskell2010

test-suite mincc-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      BackEnd.Algorithm.ShuffleSpec
      BackEnd.Analysis.PhiSpec
      FrontEnd.ParserSpec
      Paths_mincc
  autogen-modules:
      Paths_mincc
  hs-source-dirs:
      test
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      Cabal
    , base >=4.7 && <5
    , containers
    , hspec
    , megaparsec
    , mincc
    , mtl
    , parser-combinators
    , text
    , transformers
  default-language: Haskell2010
