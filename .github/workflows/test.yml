name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: haskell-actions/setup@v2
        with:
          ghc-version: "9.8.2"
          enable-stack: true
          stack-version: "2.15.7"
      - uses: actions/cache@v4
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-global-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack-global-
      - uses: actions/cache@v4
        name: Cache .stack-work
        with:
          path: .stack-work
          key: ${{ runner.os }}-stack-work-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('**/*.hs') }}
          restore-keys: |
            ${{ runner.os }}-stack-work-
      - run: stack test
        name: Run tests
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: haskell-actions/run-fourmolu@v9
        name: Lint with fourmolu
        with:
          version: "0.15.0.0"
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: haskell-actions/setup@v2
        with:
          ghc-version: "9.8.2"
          enable-stack: true
          stack-version: "2.15.7"
      - uses: actions/cache@v4
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-global-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack-global-
      - uses: actions/cache@v4
        name: Cache .stack-work
        with:
          path: .stack-work
          key: ${{ runner.os }}-stack-work-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('**/*.hs') }}
          restore-keys: |
            ${{ runner.os }}-stack-work-
      - run: stack build --dry-run
        name: Build the project
